/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;


import Connection.ConnectionFactory;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.JOptionPane;
import model.dao.AnimalDAO;
import model.dao.ClienteDAO;
import Classes_back.Animal;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Admin
 */
public class Cadastro_animal extends javax.swing.JFrame {

    /**
     * Creates new form Cadastro_animal
     */
    private String sexo=null;
    private String especie=null;
    
    public Cadastro_animal() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Cadastro de animais");
        txt_outros.setEnabled(false);
    }
    
    public void limpar(){
        txt_cpf.setText("");
        txt_nome_animal.setText("");
        txt_nome_cliente.setText("");
        txt_outros.setText("");
        rbt_cao.setSelected(false);
        rbt_gato.setSelected(false);
        rbt_femea.setSelected(false);
        rbt_macho.setSelected(false);
        rbt_outros.setSelected(false);
        txt_outros.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_nome_animal = new javax.swing.JTextField();
        txt_nome_cliente = new javax.swing.JTextField();
        btn_cadastrar_animal = new javax.swing.JButton();
        rbt_macho = new javax.swing.JRadioButton();
        rbt_femea = new javax.swing.JRadioButton();
        btn_random = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txt_cpf = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        rbt_cao = new javax.swing.JRadioButton();
        rbt_gato = new javax.swing.JRadioButton();
        rbt_outros = new javax.swing.JRadioButton();
        txt_outros = new javax.swing.JTextField();
        btn_excluir = new javax.swing.JButton();

        jLabel1.setText("Nome do animal:");

        jLabel2.setText("Nome do cliente:");

        btn_cadastrar_animal.setText("Cadastrar");
        btn_cadastrar_animal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cadastrar_animalActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbt_macho);
        rbt_macho.setText("Macho");

        buttonGroup1.add(rbt_femea);
        rbt_femea.setText("Fêmea");

        btn_random.setText("Escolher nome aleatório");
        btn_random.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_randomActionPerformed(evt);
            }
        });

        jLabel3.setText("CPF do cliente:");

        try {
            txt_cpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_cpf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_cpfFocusLost(evt);
            }
        });

        jLabel4.setText("Espécie");

        buttonGroup2.add(rbt_cao);
        rbt_cao.setText("Cão");

        buttonGroup2.add(rbt_gato);
        rbt_gato.setText("Gato");

        buttonGroup2.add(rbt_outros);
        rbt_outros.setText("Outros");
        rbt_outros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbt_outrosActionPerformed(evt);
            }
        });

        btn_excluir.setText("Excluir");
        btn_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_excluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn_excluir)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txt_cpf, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(txt_nome_animal, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(rbt_macho)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(rbt_femea)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btn_random))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(rbt_cao)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(rbt_gato)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(rbt_outros)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txt_outros, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(txt_nome_cliente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn_cadastrar_animal, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_nome_animal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbt_macho)
                    .addComponent(rbt_femea)
                    .addComponent(btn_random))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(rbt_cao)
                    .addComponent(rbt_gato)
                    .addComponent(rbt_outros)
                    .addComponent(txt_outros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_cpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_nome_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_cadastrar_animal)
                    .addComponent(btn_excluir))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_randomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_randomActionPerformed
        if((rbt_macho.isSelected())||(rbt_femea.isSelected())) {
        Random ran = new Random();
         int num;
         String nome=null;
         num=ran.nextInt(13);
         if(rbt_femea.isSelected()){
             ArrayList nomes_femeas = new ArrayList();
                nomes_femeas.add("Mel");
                nomes_femeas.add("Bela");
                nomes_femeas.add("Cacau");
                nomes_femeas.add("Dora");
                nomes_femeas.add("Cléo");
                nomes_femeas.add("Kia");
                nomes_femeas.add("Ane");
                nomes_femeas.add("Mia");
                nomes_femeas.add("Duda");
                nomes_femeas.add("Dolly");
                nomes_femeas.add("Dori");
                nomes_femeas.add("Alva");
                nomes_femeas.add("Nina");
                nome=(nomes_femeas.get(num)).toString();
         }
         if(rbt_macho.isSelected()){
            ArrayList nomes_machos = new ArrayList();
                nomes_machos.add("Aaron");
                nomes_machos.add("Abílio");
                nomes_machos.add("Baco");
                nomes_machos.add("Kiko");
                nomes_machos.add("Romeu");
                nomes_machos.add("Kent");
                nomes_machos.add("Thor");
                nomes_machos.add("Seilor");
                nomes_machos.add("Casper");
                nomes_machos.add("Elvis");
                nomes_machos.add("Bender");
                nomes_machos.add("Ariel");
                nomes_machos.add("Roque");
                nome=(nomes_machos.get(num)).toString();
         }
         txt_nome_animal.setText(nome);
        }
        else{
            JOptionPane.showMessageDialog(this, "Por favor ecolha o sexo do animal.");
        }
    }//GEN-LAST:event_btn_randomActionPerformed

    private void btn_cadastrar_animalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cadastrar_animalActionPerformed
        Animal a = new Animal();
        AnimalDAO adao = new AnimalDAO();
        ClienteDAO cdao = new ClienteDAO();
        if((rbt_cao.isSelected() || rbt_gato.isSelected() || rbt_outros.isSelected()) && (rbt_macho.isSelected() || rbt_femea.isSelected())){
        if(rbt_macho.isSelected())
            sexo="M";
        if(rbt_femea.isSelected())
            sexo="F";
        if(rbt_cao.isSelected())
            especie="Cão";
        if(rbt_gato.isSelected())
            especie="Gato";
        if(rbt_outros.isSelected())
            especie=txt_outros.getText();
        
        a.setCpf(txt_cpf.getText());
        a.setNome_animal(txt_nome_animal.getText());
        a.setNome_cliente(txt_nome_cliente.getText());
        a.setEspecie(especie);
        a.setSexo(sexo);
        
        if(cdao.verificaCliente(txt_cpf.getText())==true){
             if(adao.verificaAnimal(txt_cpf.getText(), txt_nome_animal.getText())==false)
                 adao.create(a);
             else
                 adao.update(a);
             limpar();
        }
        else{
            JOptionPane.showMessageDialog(this, "Cliente não cadastrado.");
            Cadastro_cliente cc = new Cadastro_cliente();
            cc.setVisible(true);
            cc.txt_cpf.setText(txt_cpf.getText());
        }
        }
        else
            JOptionPane.showMessageDialog(this, "Favor informar sexo e espécie.");
            
        
    }//GEN-LAST:event_btn_cadastrar_animalActionPerformed

    private void txt_cpfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_cpfFocusLost
        ClienteDAO cdao = new ClienteDAO();
        Animal a = new Animal();
        Connection con = ConnectionFactory.getConnection();
        PreparedStatement stmt=null;
        ResultSet rs = null;
        if(cdao.verificaCliente(txt_cpf.getText())==true){
          try {
              stmt = con.prepareStatement("SELECT nome FROM tb_cliente WHERE cpf=?");
              stmt.setString(1, txt_cpf.getText());
              rs=stmt.executeQuery();
              while(rs.next())
                 txt_nome_cliente.setText(rs.getString("nome"));
          } catch (SQLException ex) {
              Logger.getLogger(Cadastro_animal.class.getName()).log(Level.SEVERE, null, ex);
         }
        }
    }//GEN-LAST:event_txt_cpfFocusLost

    private void btn_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_excluirActionPerformed
        Animal a = new Animal();
        AnimalDAO adao = new AnimalDAO();
        a.setCpf(txt_cpf.getText());
        a.setNome_animal(txt_nome_animal.getText());
        adao.delete(a);
        limpar();
    }//GEN-LAST:event_btn_excluirActionPerformed

    private void rbt_outrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbt_outrosActionPerformed
       txt_outros.setEnabled(true);
    }//GEN-LAST:event_rbt_outrosActionPerformed
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cadastro_animal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cadastro_animal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cadastro_animal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cadastro_animal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cadastro_animal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cadastrar_animal;
    private javax.swing.JButton btn_excluir;
    private javax.swing.JButton btn_random;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    public javax.swing.JRadioButton rbt_cao;
    public javax.swing.JRadioButton rbt_femea;
    public javax.swing.JRadioButton rbt_gato;
    public javax.swing.JRadioButton rbt_macho;
    public javax.swing.JRadioButton rbt_outros;
    public javax.swing.JFormattedTextField txt_cpf;
    public javax.swing.JTextField txt_nome_animal;
    public javax.swing.JTextField txt_nome_cliente;
    public javax.swing.JTextField txt_outros;
    // End of variables declaration//GEN-END:variables
}
